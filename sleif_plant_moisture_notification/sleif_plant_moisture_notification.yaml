blueprint:
  name: sleif plant moisture notification
  description: "`- Version: 1.4 -`\n\nMonitors a moisture sensor. If the value
    is low (or sensor is unavailable), it turns on a status light and sends a
    notification. When moisture is OK again, it turns off the light."
  domain: automation
  input:
    moisture_sensor:
      name: Moisture Sensor
      selector:
        entity:
          domain: sensor
    status_light:
      name: Status Light
      selector:
        entity:
          domain: light
    notify_service:
      name: Notification Service
      selector:
        entity:
          domain: notify
    plant_name:
      name: Plant Name
      description: Used in the notification message
      default: "Plant"
      selector:
        text: {}

trigger:
  - platform: template
    value_template: >-
      {% set value = states(input.moisture_sensor) %}
      {{ value in ['unknown', 'unavailable'] or (value | float(default=9999)) < 30 }}
    entity_id: !input moisture_sensor
    for:
      seconds: 10

  - platform: template
    value_template: >-
      {% set value = states(input.moisture_sensor) %}
      {{ value == 'ok' or (value | float(default=9999)) >= 30 }}
    entity_id: !input moisture_sensor
    for:
      seconds: 10

action:
  - choose:
      - conditions:
          - condition: template
            value_template: >-
              {% set value = states(input.moisture_sensor ) %}
              {{ value in ['unknown', 'unavailable']
                or (value | float(default=9999)) < 30 }}
        sequence:
          - service: !input notify_service
            data:
              message: "{{ input.plant_name }} needs watering! (Moisture below 30%)"
          - service: light.turn_on
            target:
              entity_id: !input status_light
      - conditions:
          - condition: template
            value_template: >-
              {% set value = states(input.moisture_sensor ) %}
              {{ value == 'ok' or (value | float(default=9999)) >= 30 }}
        sequence:
          - service: light.turn_off
            target:
              entity_id: !input status_light
mode: single
