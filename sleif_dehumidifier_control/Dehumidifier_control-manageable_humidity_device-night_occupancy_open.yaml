blueprint:
  name: sleif dehumidifier - control a manageable device
  description: "`- Version: 1.17 -`\n\nControls a manageable dehumidifier device depending on the humidity"
  domain: automation

  input:
    condition_start_time:
      name: Automation start time
      description: Automation start time
      default: "08:00:00"
      selector:
        time:
    condition_end_time:
      name: Automation end time
      description: Automation end time
      default: "22:00:00"
      selector:
        time:
    helper_fewo_occupancy:
      name: (OPTIONAL) Fewo Occupancy Helper
      description: Fewo Occupancy Helper
      default: none
      selector:
        entity:
          domain: input_boolean
          multiple: false
    humidity_current:
      name: Humidity sensor
      description: "Sensor that contains the current humidity"
      selector:
        entity:
          domain: sensor
          device_class: humidity
          multiple: false
    temperature_current:
      name: temperature sensor
      description: "Sensor that contains the current temperature"
      selector:
        entity:
          domain: sensor
          device_class: temperature
          multiple: false
    target_humidity:
      name: Target humidity
      description: "Target humidity"
      default: 60
      selector:
        number:
          min: 45
          max: 70
          step: 5
          unit_of_measurement: "%"
    open_window_sensor:
      name: (OPTIONAL) Open window sensor
      description: "Open window sensor"
      default: none
      selector:
        entity:
          domain: binary_sensor
          device_class: opening
    dehumidifier_device:
      name: Dehumidifier Device
      description: "Select a dehumidifier device"
      selector:
        device:
    power_plug:
      name: (OPTIONAL) Dehumidifier Plug
      description: "Plug entity of the power plug of the dehumidifier - will be always turned on"
      default: []
      selector:
        entity:
          domain: switch
          multiple: false

trigger:
  - platform: state
    entity_id:
      - !input humidity_current
      - !input temperature_current
  - platform: time
    at:
      - !input condition_start_time
      - !input condition_end_time
  - platform: template
    value_template: >-
      "{% if is_state('open_window_sensor', ['on', 'off']) %}true{% endif %}"
  - platform: event
    event_type:
      - automation_reloaded

variables:
  _dehumidifier_device_input: !input dehumidifier_device
  dehumidifier_power: >
    {{ device_entities(_dehumidifier_device_input)
        | select('match', '^switch\\..*power')
        | list
        | first }}
  dehumidifier_mode: >
    {{ device_entities(_dehumidifier_device_input)
        | select('match', '^select\\..*mode')
        | list
        | first }}
  dehumidifier_target_humidity: >
    {{ device_entities(_dehumidifier_device_input)
        | select('match', '^number\\..*target_humidity')
        | list
        | first }}
  _condition_start_time_input: !input condition_start_time
  condition_start_time_value: "{{ _condition_start_time_input | today_at() | as_timestamp() | int }}"
  _condition_end_time_input: !input condition_end_time
  condition_end_time_value: "{{ _condition_end_time_input| today_at() | as_timestamp() | int }}"
  _now_time: "{{ now()|as_timestamp() | int }}"
  _helper_fewo_occupancy_input: !input helper_fewo_occupancy
  helper_fewo_occupancy_value: "{{ states(_helper_fewo_occupancy_input) | bool(false) }}"
  _humidity_current_input: !input humidity_current
  humidity_current_value: "{{ states(_humidity_current_input) | float }}"
  _temperature_current_input: !input temperature_current
  temperature_current_value: "{{ states(_temperature_current_input) | float }}"
  temperature_threshold: 13
  target_humidity_delta: 5
  _target_humidity_input: !input target_humidity
  target_humidity_value_lo: "{{ _target_humidity_input | float(60) - target_humidity_delta/2 }}"
  target_humidity_value_hi: >
    {% if temperature_current_value < temperature_threshold %}
    {{ _target_humidity_input | float(60) + target_humidity_delta/2+target_humidity_delta }}
    {% else %}
    {{ _target_humidity_input | float(60) + target_humidity_delta/2 }}
    {% endif %}
  open_window_sensor_input: !input open_window_sensor
  open_window_sensor_value: "{{ states(open_window_sensor_input) | bool(false) }}"
  dehumidifier_value: "{{ states(dehumidifier_power) | lower }}"
  _is_across_midnight: >
    {% if condition_start_time_value > condition_end_time_value %}
    True
    {% else %}
    False
    {% endif %}
  is_within_time_range: >
    {% if _is_across_midnight %}
    {{ ( _now_time >= condition_start_time_value or _now_time < condition_end_time_value ) or not helper_fewo_occupancy_value }}
    {% else %}
    {{ condition_start_time_value <= _now_time < condition_end_time_value or not helper_fewo_occupancy_value }}
    {% endif %}
  power_target: >-
      {% if humidity_current_value > target_humidity_value_hi and
          not open_window_sensor_value and is_within_time_range %}
        on
      {% elif humidity_current_value < target_humidity_value_lo or
          open_window_sensor_value or not is_within_time_range %}
        off
      {% elif temperature_current_value < temperature_threshold and humidity_current_value < target_humidity_value_hi - target_humidity_delta + 0.5 or
          open_window_sensor_value or not is_within_time_range %}
        off
      {% else %}
        {{ dehumidifier_value }}
      {% endif %}
  power_action: "{{ 'switch.turn_' ~ power_target }}"
  power_plug_input: !input power_plug

actions:
  - if:
      - condition: template
        value_template: "{{ power_plug_input != '' }}"
    then:
      - service: switch.turn_on
        target:
          entity_id: "{{ power_plug_input }}"
  - if:
      - condition: template
        value_template: '{{ states(dehumidifier_power) != power_target }}'
    then:
      - service: "{{ power_action }}"
        target:
          entity_id: "{{ dehumidifier_power }}"
      - service: select.select_option
        metadata: {}
        data:
          option: Humidity
        target:
          entity_id: "{{ dehumidifier_mode }}"
      - service: number.set_value
        metadata: {}
        data:
          value: "{{ _target_humidity_input | int(60) - target_humidity_delta }}"
        target:
          entity_id: "{{ dehumidifier_target_humidity }}"
